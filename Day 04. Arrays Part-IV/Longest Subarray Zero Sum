#include <bits/stdc++.h>

int LongestSubsetWithZeroSum(vector < int > arr) {

  int maxi = 0; //It will store the maxsize of subarray having sum=0
    int sum = 0;
    int n= arr.size();
    unordered_map<int, int> mpp;
    //This hashmap will contain the 'first occurnce' of the element.

    mpp[0] = -1;

    for (int i = 0; i < n; i++)
    {
        sum += arr[i];
        if(sum==0)
            {
                maxi= i+1;
            }
        else if (mpp.find(sum) != mpp.end()) {
              maxi = max(maxi, i - mpp[sum]);
            } 
        else 
            {
              mpp[sum] = i;
            }
    }

    return maxi;

}
